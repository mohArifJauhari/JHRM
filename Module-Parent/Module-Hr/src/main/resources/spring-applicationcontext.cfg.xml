<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:aop="http://www.springframework.org/schema/aop" 
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:jee="http://www.springframework.org/schema/jee" 
        xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
        
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-4.0.xsd 
            http://www.springframework.org/schema/jee 
            http://www.springframework.org/schema/jee/spring-jee-4.0.xsd 
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
            http://www.springframework.org/schema/task 
            http://www.springframework.org/schema/task/spring-task-4.0.xsd">
    
    <context:component-scan base-package="org.module.*" />
    
    <tx:annotation-driven/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
        <property name="hibernateProperties">
            <props>
                <!--prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop-->
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <!--prop key="hibernate.dialect"> org.hibernate.dialect.Oracle10gDialect</prop-->           
                <!--prop key="hibernate.hbm2ddl.auto">update</prop-->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>
    
    <!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true"/>

            <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- ensure that the above transactional advice runs for any execution of an operation defined by the FooService interface -->
    <aop:config>
        <aop:pointcut id="fooServiceOperation" expression="execution(* org.module.sysadmin.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
    </aop:config>
    
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="maxResults" value="3000" />
    </bean>
  	
    <bean id="baseDao" abstract="true" p:hibernateTemplate-ref="hibernateTemplate" class="org.module.api.common.dao.base">
    	<property name="sessionFactory" ref="sessionFactory" />
    </bean>
  	
  	<!-- Inject DAO -->
  	<!-- Job -->
  	<bean id="mstJobtitleDAO" class="org.module.hr.dao.impl.MstJobtitleDAOImpl" parent="baseDao"/>
  	<bean id="mstPaygradeDAO" class="org.module.hr.dao.impl.MstPaygradeDAOImpl" parent="baseDao"/>
  	<bean id="mstEmployementStatusDAO" class="org.module.hr.dao.impl.MstEmployementStatusDAOImpl" parent="baseDao"/>
  	<bean id="mstJobCategoryDAO" class="org.module.hr.dao.impl.MstJobCategoryDAOImpl" parent="baseDao"/>
  	
  	<!-- Employee -->
	<bean id="trsEmployeeEmergencyContactDAO" class="org.module.hr.dao.impl.TrsEmployeeEmergencyContactDAOImpl" parent="baseDao"/>
  	
  	<!-- Test -->
    <bean id="mstTestDAO" class="org.module.hr.dao.impl.MstTestDAOImpl" parent="baseDao"/>
	
	<!-- Inject Service -->
	<!-- Job -->
	<bean id="mstJobtitleService" class="org.module.hr.service.impl.MstJobtitleServiceImpl">
        <property name="mstJobtitleDAO" ref="mstJobtitleDAO" />
    </bean>
    <bean id="mstPaygradeService" class="org.module.hr.service.impl.MstPaygradeServiceImpl">
        <property name="mstPaygradeDAO" ref="mstPaygradeDAO" />
    </bean>
    <bean id="mstEmployementStatusService" class="org.module.hr.service.impl.MstEmployementStatusServiceImpl">
        <property name="mstEmployementStatusDAO" ref="mstEmployementStatusDAO" />
    </bean>
    <bean id="mstJobCategoryService" class="org.module.hr.service.impl.MstJobCategoryServiceImpl">
        <property name="mstJobCategoryDAO" ref="mstJobCategoryDAO" />
    </bean>
    
    <!-- Employee -->
	<bean id="trsEmployeeEmergencyContactService" class="org.module.hr.service.impl.TrsEmployeeEmergencyContactServiceImpl">
		<property name="trsEmployeeEmergencyContactDAO" ref="trsEmployeeEmergencyContactDAO"/>
	</bean>
	
	<!-- Test -->
    <bean id="mstTestService" class="org.module.hr.service.impl.MstTestServiceImpl">
        <property name="mstTestDAO" ref="mstTestDAO" />
    </bean>
 
</beans>